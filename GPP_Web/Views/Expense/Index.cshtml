@model IEnumerable<GPP_Web.DTOs.Expense.ExpenseResponseDTO>

@{
    ViewData["Title"] = "Listado Global de Gastos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
@* SweetAlert2 CSS *@
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.8/dist/sweetalert2.min.css">

<style>
    /* Estilos generales y variables - Consistentes con otras vistas */
    :root {
        --light-gray-bg: #eff1f3;
        --primary-color: #3A889D; /* Dark Slate Gray */
        --secondary-color: #275849; /* Charcoal Blue (para contrastes) */
        --dark-text-color: #343a40; /* Texto oscuro general */
        --border-color: #e9ecef; /* Color de borde suave */
        --success-color: #28a745; /* Bootstrap green */
        --danger-color: #dc3545; /* Bootstrap red */
        --info-color: #17a2b8; /* Bootstrap info */
        --card-bg: #ffffff;
        --input-border: #ced4da;
        --focus-ring-color: rgba(58, 136, 157, 0.25); /* Ligero Primary color para focus */
    }

    body {
        background-color: var(--light-gray-bg) !important;
        font-family: 'Plus Jakarta Sans', sans-serif;
        color: var(--dark-text-color);
    }

    /* Contenedor principal para consistencia con el dashboard */
    .dashboard-container {
        padding-top: 3rem;
        padding-bottom: 3rem;
        max-width: 1200px; /* Ancho para la tabla */
        margin-left: auto;
        margin-right: auto;
        padding-left: 15px;
        padding-right: 15px;
    }

    /* Título principal */
    .dashboard-main-title {
        font-size: 3.5rem;
        font-weight: 800;
        color: var(--dark-text-color);
        text-transform: uppercase;
        letter-spacing: 2px;
        margin-bottom: 1rem;
        position: relative;
        padding-bottom: 15px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .dashboard-main-title i {
            font-size: 3rem;
            margin-right: 15px;
            color: var(--dark-text-color);
        }

        .dashboard-main-title::after {
            content: '';
            position: absolute;
            left: 50%;
            bottom: 0;
            transform: translateX(-50%);
            width: 100px;
            height: 6px;
            background-color: var(--secondary-color);
            border-radius: 3px;
        }

    /* Subtítulo */
    .dashboard-subtitle {
        font-size: 1.75rem;
        color: var(--dark-text-color);
        margin-bottom: 2rem;
        font-weight: 600;
        text-align: center; /* Centrar el subtítulo */
    }

    /* Back Link Style */
    .dashboard-back-link {
        display: inline-flex;
        align-items: center;
        margin-bottom: 2rem;
        color: var(--primary-color);
        font-size: 1.1rem;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
    }

        .dashboard-back-link:hover {
            color: var(--secondary-color);
            transform: translateX(-5px);
        }

        .dashboard-back-link i {
            font-size: 1.5rem;
            margin-right: 0.5rem;
        }

    /* Table styles */
    .table-container {
        background-color: var(--card-bg);
        border-radius: 1rem;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        padding: 2.5rem;
        overflow-x: auto; /* Ensures table is responsive */
    }

    .table {
        width: 100%;
        margin-bottom: 0;
        border-collapse: separate; /* Allow border-radius on cells */
        border-spacing: 0;
    }

        .table thead th {
            background-color: var(--primary-color);
            color: white;
            padding: 1rem;
            border-bottom: none; /* Remove default bootstrap border */
            text-align: left;
            font-weight: 700;
            font-size: 1.05rem;
        }

        .table tbody tr:nth-of-type(odd) {
            background-color: #f9f9f9; /* Lighter stripe */
        }

        .table tbody tr:hover {
            background-color: #f0f0f0;
            cursor: default; /* Cambiado de 'pointer' a 'default' ya que no hay acciones en la fila completa */
        }

        .table tbody td {
            padding: 1rem;
            vertical-align: middle;
            border-top: 1px solid var(--border-color); /* Light border between rows */
        }

        /* Specific styles for table headers corners */
        .table thead th:first-child {
            border-top-left-radius: 0.75rem;
        }

        .table thead th:last-child {
            border-top-right-radius: 0.75rem;
        }

        /* Button within table */
        .table .btn-sm {
            padding: 0.3rem 0.75rem;
            font-size: 0.875rem;
            border-radius: 0.5rem;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
        }

        .table .btn-secondary {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
            color: white;
        }

            .table .btn-secondary:hover {
                background-color: #1e4539; /* Darker secondary on hover */
                border-color: #1e4539;
            }

            .table .btn-secondary i {
                margin-right: 0.3rem;
            }

    /* No data message */
    .no-data-message {
        text-align: center;
        padding: 2rem;
        font-size: 1.2rem;
        color: var(--dark-text-color);
        background-color: var(--card-bg);
        border-radius: 1rem;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
        margin-top: 2rem;
    }

        .no-data-message i {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: var(--primary-color);
            display: block;
        }

    /* Estilos para la paginación */
    .pagination-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 30px;
        gap: 15px; /* Espacio entre los elementos de paginación */
    }

    .pagination-link {
        background-color: var(--primary-color);
        color: white;
        padding: 10px 20px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        display: inline-flex;
        align-items: center;
    }

        .pagination-link:hover:not(.disabled) {
            background-color: var(--secondary-color);
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
            color: white; /* Asegura que el texto permanezca blanco */
        }

        .pagination-link.disabled {
            background-color: #cccccc;
            cursor: not-allowed;
            opacity: 0.7;
            box-shadow: none;
        }

        .pagination-link i {
            margin: 0 5px;
        }

    .pagination-info {
        font-size: 1.1rem;
        color: var(--dark-text-color);
        font-weight: 500;
    }

    /* Estilos para SweetAlert2 personalizados (popups de animación) */
    .animate__animated {
        -webkit-animation-duration: 0.5s;
        animation-duration: 0.5s;
        -webkit-animation-fill-mode: both;
        animation-fill-mode: both;
    }

    .animate__fadeInDown {
        -webkit-animation-name: fadeInDown;
        animation-name: fadeInDown;
    }

    .animate__shakeX {
        -webkit-animation-name: shakeX;
        animation-name: shakeX;
    }

    /* Keyframes for Animate.css if not globally imported */
    @@keyframes fadeInDown {
        from {
            opacity: 0;
            -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0);
        }

        to {
            opacity: 1;
            -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
        }
    }

    @@keyframes shakeX {
        from, to {
            -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
        }

        10%, 30%, 50%, 70%, 90% {
            -webkit-transform: translate3d(-10px, 0, 0);
            transform: translate3d(-10px, 0, 0);
        }

        20%, 40%, 60%, 80% {
            -webkit-transform: translate3d(10px, 0, 0);
            transform: translate3d(10px, 0, 0);
        }
    }
</style>

<div class="container-fluid dashboard-container animate__animated animate__fadeIn">
    @* Para volver al Dashboard principal del Contador *@
    <a href="@Url.Action("Dashboard", "Accountant")" class="dashboard-back-link animate__animated animate__fadeInLeft">
        <i class="bi bi-arrow-left"></i> Volver al Dashboard
    </a>

    <h1 class="text-center dashboard-main-title mb-3 animate__animated animate__bounceIn">
        <i class="bi bi-cash-coin"></i> Todos los Gastos
    </h1>
    <p class="text-center dashboard-subtitle animate__animated animate__fadeInUp">
        Listado completo de todos los gastos registrados en el sistema.
    </p>

    @* Manejo de mensajes con SweetAlert2 *@
    @if (TempData["SuccessMessage"] is string successMessage && !string.IsNullOrWhiteSpace(successMessage))
    {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                Swal.fire({
                    icon: 'success',
                    title: '¡Éxito!',
                    text: '@Html.Raw(successMessage)',
                    confirmButtonText: 'Aceptar',
                    customClass: {
                        popup: 'animate__animated animate__fadeInDown'
                    }
                });
            });
        </script>
    }

    @if (ViewBag.ErrorMessage is string errorMessage && !string.IsNullOrWhiteSpace(errorMessage))
    {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                Swal.fire({
                    icon: 'error',
                    title: '¡Error!',
                    text: '@Html.Raw(errorMessage)',
                    confirmButtonText: 'Aceptar',
                    customClass: {
                        popup: 'animate__animated animate__shakeX'
                    }
                });
            });
        </script>
    }

    @if (ViewBag.InfoMessage is string infoMessage && !string.IsNullOrWhiteSpace(infoMessage))
    {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                Swal.fire({
                    icon: 'info',
                    title: 'Información',
                    text: '@Html.Raw(infoMessage)',
                    confirmButtonText: 'Aceptar',
                    customClass: {
                        popup: 'animate__animated animate__fadeInDown'
                    }
                });
            });
        </script>
    }

    @* Bloque principal para mostrar la tabla de gastos o el mensaje de no datos *@
    @if (Model != null && Model.Any())
    {
        <div class="table-container animate__animated animate__fadeInUp">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID Gasto</th>
                        <th>Monto del Gasto</th>
                        <th>Fecha del Gasto</th>
                        <th>Estado</th>
                        <th>Adjunto</th>
                        <th>Descripción</th>
                        <th>Creado En</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var expense in Model)
                    {
                        <tr>
                            <td>@expense.ExpenseId</td>
                            <td>₡@expense.ExpenseAmount.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("es-CR"))</td>
                            <td>@expense.ExpenseDate.ToShortDateString()</td>
                            <td>@expense.Status</td>
                            <td>
                                @if (!string.IsNullOrEmpty(expense.DocumentReference))
                                {
                                    <button type="button" class="btn btn-secondary btn-sm" onclick="window.open('@Url.Content("~/images/documents/" + expense.DocumentReference)', '_blank')">
                                        <i class="bi bi-file-earmark-arrow-down"></i> Ver Adjunto
                                    </button>
                                }
                                else
                                {
                                    <span>No disponible</span>
                                }
                            </td>
                            <td>@expense.Description</td>
                            <td>@(expense.CreatedAt?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div> @* Cierre de .table-container *@

        @* Controles de paginación *@
        <div class="pagination-container">
            <a href="@Url.Action("Index", new { pageNumber = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })"
               class="pagination-link @(ViewBag.HasPreviousPage ? "" : "disabled")">
                <i class="bi bi-arrow-left"></i> Anterior
            </a>

            <span class="pagination-info">
                Página @ViewBag.CurrentPage de @ViewBag.TotalPages
            </span>

            <a href="@Url.Action("Index", new { pageNumber = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })"
               class="pagination-link @(ViewBag.HasNextPage ? "" : "disabled")">
                Siguiente <i class="bi bi-arrow-right"></i>
            </a>
        </div>
    }
    else
    {
        <div class="no-data-message animate__animated animate__fadeInUp">
            <i class="bi bi-info-circle"></i>
            <p>No hay gastos registrados en el sistema en este momento.</p>
            @if (!string.IsNullOrWhiteSpace(ViewBag.ErrorMessage))
            {
                <p>@ViewBag.ErrorMessage</p>
            }
        </div> @* Cierre de .no-data-message *@
    }
</div> @* Cierre de .dashboard-container *@

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    @* SweetAlert2 JS *@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.8/dist/sweetalert2.all.min.js"></script>

    <script>
        // Lógica para mostrar mensajes con SweetAlert2
        document.addEventListener('DOMContentLoaded', function() {
            var successMessage = '@(TempData["SuccessMessage"] as string ?? "")';
            var errorMessage = '@(ViewBag.ErrorMessage as string ?? "")';
            var infoMessage = '@(ViewBag.InfoMessage as string ?? "")';

            if (successMessage && successMessage.trim() !== '') {
                Swal.fire({
                    icon: 'success',
                    title: '¡Éxito!',
                    text: successMessage,
                    confirmButtonText: 'Aceptar',
                    customClass: { popup: 'animate__animated animate__fadeInDown' }
                });
            } else if (errorMessage && errorMessage.trim() !== '') {
                Swal.fire({
                    icon: 'error',
                    title: '¡Error!',
                    text: errorMessage,
                    confirmButtonText: 'Aceptar',
                    customClass: { popup: 'animate__animated animate__shakeX' }
                });
            } else if (infoMessage && infoMessage.trim() !== '') {
                 Swal.fire({
                    icon: 'info',
                    title: 'Información',
                    text: infoMessage,
                    confirmButtonText: 'Aceptar',
                    customClass: { popup: 'animate__animated animate__fadeInDown' }
                });
            }
        });
    </script>
}